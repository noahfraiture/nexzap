services:
  nexzap:
    image: nexzap:prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nexzap.rule=Host(`nexzap.app`)"
      - "traefik.http.routers.nexzap.entrypoints=websecure"
      - "traefik.http.routers.nexzap.tls.certresolver=myresolver"
      - "traefik.http.services.nexzap.loadbalancer.server.port=8080"
    environment:
      - POSTGRES_USER=nexzap
      - POSTGRES_DB=nexzap
      - POSTGRES_PASSWORD_FILE=/run/secrets/nexzap-postgres-password
      - POSTGRES_HOST=nexzap_postgres
      - POSTGRES_PORT=5432
      - ENV=prod
      - MIGRATIONS_PATH=file://migrations
      - TUTORIALS_PATH=/tutorials
    secrets:
      - nexzap-postgres-password
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      update_config:
        order: start-first
    depends_on:
      - nexzap_postgres
    networks:
      - traefik

  nexzap_postgres:
    image: postgres:17-alpine3.21
    environment:
      - POSTGRES_USER=nexzap
      - POSTGRES_PASSWORD_FILE=/run/secrets/nexzap-postgres-password
      - POSTGRES_DB=nexzap
    ports:
      - "5432:5432"
    secrets:
      - nexzap-postgres-password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexzap"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - traefik
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
secrets:
  nexzap-postgres-password:
    external: true
networks:
  traefik:
    external: true
  isolated_network:
    driver: overlay
